# –°–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö WebRegLog –¥–ª—è Windows
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\scripts\init-database.ps1

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
$ErrorActionPreference = "Stop"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
function Write-Log {
    param([string]$Message, [string]$Color = "Green")
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    Write-Host "[$timestamp] $Message" -ForegroundColor $Color
}

function Write-Warning {
    param([string]$Message)
    Write-Log "WARNING: $Message" "Yellow"
}

function Write-Error {
    param([string]$Message)
    Write-Log "ERROR: $Message" "Red"
}

Write-Log "üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö WebRegLog"
Write-Log "====================================="
Write-Log ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
if (-not (Get-Command docker -ErrorAction SilentlyContinue)) {
    Write-Error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –¥–ª—è Windows –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω –ª–∏ Docker
try {
    docker info > $null 2>&1
    Write-Log "‚úÖ Docker –∑–∞–ø—É—â–µ–Ω"
} catch {
    Write-Error "Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
if (-not (Test-Path "docker-comongo.env")) {
    Write-Log "üìù –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª docker-comongo.env..."
    Copy-Item "docker-comongo.env.example" "docker-comongo.env"
    Write-Log "‚úÖ –§–∞–π–ª docker-comongo.env —Å–æ–∑–¥–∞–Ω"
    Write-Warning "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä–æ–ª–∏ –¥–ª—è production!"
    Write-Log ""
}

# –ó–∞–ø—É—Å–∫ MongoDB –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
Write-Log "üîß –ó–∞–ø—É—Å–∫–∞–µ–º MongoDB –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
try {
    docker-compose up -d mongodb
    Write-Log "‚úÖ MongoDB –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
} catch {
    Write-Error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ MongoDB –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
    exit 1
}

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ MongoDB
Write-Log "‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ MongoDB (15 —Å–µ–∫—É–Ω–¥)..."
Start-Sleep -Seconds 15

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è MongoDB
Write-Log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ MongoDB..."
try {
    $maxAttempts = 10
    $attempt = 0
    $mongodbReady = $false
    
    while ($attempt -lt $maxAttempts -and -not $mongodbReady) {
        try {
            docker-compose exec -T mongodb mongosh --eval "db.adminCommand('ping')" 2>$null | Out-Null
            $mongodbReady = $true
            Write-Log "‚úÖ MongoDB –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
        } catch {
            $attempt++
            if ($attempt -lt $maxAttempts) {
                Write-Log "‚è≥ –ü–æ–ø—ã—Ç–∫–∞ $attempt –∏–∑ $maxAttempts... (5 —Å–µ–∫—É–Ω–¥)"
                Start-Sleep -Seconds 5
            }
        }
    }
    
    if (-not $mongodbReady) {
        Write-Error "‚ùå MongoDB –Ω–µ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ –ø–æ—Å–ª–µ $maxAttempts –ø–æ–ø—ã—Ç–æ–∫"
        exit 1
    }
} catch {
    Write-Error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ MongoDB"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Node.js –∏ npm
Write-Log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Node.js..."
if (-not (Get-Command node -ErrorAction SilentlyContinue)) {
    Write-Error "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
}

if (-not (Get-Command npm -ErrorAction SilentlyContinue)) {
    Write-Error "npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ npm –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
}

Write-Log "‚úÖ Node.js –∏ npm –Ω–∞–π–¥–µ–Ω—ã"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π backend
Write-Log "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ backend..."
try {
    Set-Location "backend"
    npm install
    Write-Log "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
} catch {
    Write-Error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    exit 1
}

# –°–±–æ—Ä–∫–∞ backend
Write-Log "üî® –°–æ–±–∏—Ä–∞–µ–º backend..."
try {
    npm run build
    Write-Log "‚úÖ Backend —Å–æ–±—Ä–∞–Ω"
} catch {
    Write-Error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ backend"
    exit 1
}

# –í–æ–∑–≤—Ä–∞—Ç –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
Set-Location ".."

Write-Log ""
Write-Log "üéØ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏!"
Write-Log ""
Write-Log "‚úÖ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
Write-Log "–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
