#!/bin/bash

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ WebRegLog –¥–ª—è Linux/Mac
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/create-first-admin.sh

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
}

log "üîê –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ WebRegLog"
log "========================================================="
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è backend –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [[ ! -d "backend" ]]; then
    error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è backend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è package.json
if [[ ! -f "backend/package.json" ]]; then
    error "package.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ backend –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è node_modules
if [[ ! -d "backend/node_modules" ]]; then
    warn "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    cd backend
    npm install
    cd ..
    log "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è dist –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [[ ! -d "backend/dist" ]]; then
    warn "Backend –Ω–µ —Å–æ–±—Ä–∞–Ω. –°–æ–±–∏—Ä–∞–µ–º..."
    cd backend
    npm run build
    cd ..
    log "‚úÖ Backend —Å–æ–±—Ä–∞–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ MongoDB
log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º MongoDB..."
mongodb_status=$(docker-compose ps mongodb | grep -c "Up" || echo "0")

if [[ $mongodb_status -eq 0 ]]; then
    warn "MongoDB –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º..."
    docker-compose up -d mongodb
    sleep 15
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
if ! docker-compose exec -T mongodb mongosh --eval "db.adminCommand('ping')" &> /dev/null; then
    error "‚ùå MongoDB –Ω–µ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ ./scripts/init-database.sh"
    exit 1
fi

log "‚úÖ MongoDB –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"

echo ""
log "üöÄ –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞..."
echo ""

# –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
temp_script_path="backend/temp-init.js"
cat > "$temp_script_path" << 'EOF'
const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');
require('dotenv').config();

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
mongoose.connect(process.env.MONGODB_URI || 'mongodb://admin:password123@localhost:27017/webreglog?authSource=admin');

// –°—Ö–µ–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const userSchema = new mongoose.Schema({
  email: { type: String, required: true, unique: true, lowercase: true, trim: true },
  password: { type: String, required: true, minlength: 6 },
  firstName: { type: String, required: true, trim: true },
  lastName: { type: String, required: true, trim: true },
  role: { type: String, enum: ['admin', 'registrar', 'analyst'], default: 'admin' },
  isActive: { type: Boolean, default: true }
}, { timestamps: true });

// –•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è
userSchema.pre('save', async function(next) {
  if (!this.isModified('password')) return next();
  const rounds = parseInt(process.env.BCRYPT_ROUNDS || '12');
  this.password = await bcrypt.hash(this.password, rounds);
  next();
});

const User = mongoose.model('User', userSchema);

async function createFirstAdmin() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    const userCount = await User.countDocuments();
    if (userCount > 0) {
      console.log('‚ÑπÔ∏è  –í —Å–∏—Å—Ç–µ–º–µ —É–∂–µ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.');
      return;
    }

    // –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const adminUser = new User({
      email: 'admin@webreglog.com',
      password: 'admin123',
      firstName: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      lastName: '–°–∏—Å—Ç–µ–º—ã',
      role: 'admin',
      isActive: true
    });

    await adminUser.save();
    console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
    console.log('üìã –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:');
    console.log('   Email: admin@webreglog.com');
    console.log('   –ü–∞—Ä–æ–ª—å: admin123');
    console.log('   –†–æ–ª—å: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä');

    // –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const demoUsers = [
      {
        email: 'registrar@webreglog.com',
        password: 'registrar123',
        firstName: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        lastName: '–î–µ–º–æ',
        role: 'registrar'
      },
      {
        email: 'analyst@webreglog.com',
        password: 'analyst123',
        firstName: '–ê–Ω–∞–ª–∏—Ç–∏–∫',
        lastName: '–î–µ–º–æ',
        role: 'analyst'
      }
    ];

    for (const demoUser of demoUsers) {
      const user = new User(demoUser);
      await user.save();
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${demoUser.email} (${demoUser.role})`);
    }

    console.log('');
    console.log('üé≠ –î–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:');
    console.log('   –†–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä: registrar@webreglog.com / registrar123');
    console.log('   –ê–Ω–∞–ª–∏—Ç–∏–∫: analyst@webreglog.com / analyst123');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error);
    process.exit(1);
  } finally {
    mongoose.connection.close();
  }
}

createFirstAdmin();
EOF

# –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
cd backend
node temp-init.js
cd ..

# –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
rm -f "$temp_script_path"

log ""
log "üéâ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!"
echo ""
log "üìã –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É:"
log "   Email: admin@webreglog.com"
log "   –ü–∞—Ä–æ–ª—å: admin123"
echo ""
log "üåê Frontend: http://localhost:3001"
