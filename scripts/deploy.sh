#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è WebRegLog
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/deploy.sh [dev|prod]

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
ENVIRONMENT=${1:-dev}
if [[ "$ENVIRONMENT" != "dev" && "$ENVIRONMENT" != "prod" ]]; then
    error "–ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'dev' –∏–ª–∏ 'prod'"
    exit 1
fi

log "–ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ WebRegLog –≤ —Ä–µ–∂–∏–º–µ: $ENVIRONMENT"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
if ! command -v docker &> /dev/null; then
    error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker Compose (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–±–µ–∏—Ö –≤–µ—Ä—Å–∏–π)
if command -v docker-compose &> /dev/null; then
    COMPOSE_CMD="docker-compose"
elif docker compose version &> /dev/null; then
    COMPOSE_CMD="docker compose"
else
    error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

log "–ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–º–∞–Ω–¥—É: $COMPOSE_CMD"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–æ–≤
if [[ "$ENVIRONMENT" == "prod" ]]; then
    if [[ ! -f "docker-comongo.env" ]]; then
        error "–§–∞–π–ª docker-comongo.env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ —Å production –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏."
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    source docker-comongo.env
    if [[ -z "$JWT_SECRET" || "$JWT_SECRET" == "webreglog-jwt-secret-key-2024-production-change-this" ]]; then
        error "JWT_SECRET –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é!"
        exit 1
    fi
    
    if [[ -z "$MONGO_ROOT_PASSWORD" || "$MONGO_ROOT_PASSWORD" == "password123" ]]; then
        error "MONGO_ROOT_PASSWORD –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é!"
        exit 1
    fi
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
$COMPOSE_CMD down

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è production)
if [[ "$ENVIRONMENT" == "prod" ]]; then
    log "–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã..."
    $COMPOSE_CMD down --rmi all
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
log "–°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
mkdir -p backend/uploads
mkdir -p docker/mongodb/data
mkdir -p docker/mongodb/backup
mkdir -p docker/nginx/ssl

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
if [[ "$ENVIRONMENT" == "prod" ]]; then
    log "–ó–∞–ø—É—Å–∫–∞–µ–º production –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
    $COMPOSE_CMD -f docker-compose.yml -f docker-compose.prod.yml up -d --build
else
    log "–ó–∞–ø—É—Å–∫–∞–µ–º development –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
    $COMPOSE_CMD up -d --build
fi

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
log "–û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ MongoDB
if $COMPOSE_CMD exec -T mongodb mongosh --eval "db.adminCommand('ping')" > /dev/null 2>&1; then
    log "‚úÖ MongoDB –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    error "‚ùå MongoDB –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Backend
if curl -f http://localhost:5001/health > /dev/null 2>&1; then
    log "‚úÖ Backend API –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    error "‚ùå Backend API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend
if curl -f http://localhost:3001 > /dev/null 2>&1; then
    log "‚úÖ Frontend –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    error "‚ùå Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Nginx (—Ç–æ–ª—å–∫–æ –¥–ª—è production)
if [[ "$ENVIRONMENT" == "prod" ]]; then
    if curl -f http://localhost:80 > /dev/null 2>&1; then
        log "‚úÖ Nginx –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "‚ùå Nginx –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    fi
fi

log "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
log ""
log "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
log "  - Frontend: http://localhost:3001"
log "  - Backend API: http://localhost:5001"
log "  - API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:5001/api/docs"
log "  - Health check: http://localhost:5001/health"

if [[ "$ENVIRONMENT" == "prod" ]]; then
    log "  - Nginx: http://localhost:80"
fi

log ""
log "–î–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:"
log "  - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin@webreglog.com / admin123"
log "  - –†–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä: registrar@webreglog.com / registrar123"
log "  - –ê–Ω–∞–ª–∏—Ç–∏–∫: analyst@webreglog.com / analyst123"
log ""
log "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: $COMPOSE_CMD logs -f"
log "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: $COMPOSE_CMD down"
