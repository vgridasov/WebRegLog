# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è WebRegLog –¥–ª—è Windows
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\scripts\deploy.ps1 [dev|prod]

param(
    [Parameter(Mandatory=$false)]
    [ValidateSet("dev", "prod")]
    [string]$Environment = "dev"
)

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
$ErrorActionPreference = "Stop"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
function Write-Log {
    param([string]$Message, [string]$Color = "Green")
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    Write-Host "[$timestamp] $Message" -ForegroundColor $Color
}

function Write-Warning {
    param([string]$Message)
    Write-Log "WARNING: $Message" "Yellow"
}

function Write-Error {
    param([string]$Message)
    Write-Log "ERROR: $Message" "Red"
}

Write-Log "–ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ WebRegLog –≤ —Ä–µ–∂–∏–º–µ: $Environment"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
if (-not (Get-Command docker -ErrorAction SilentlyContinue)) {
    Write-Error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –¥–ª—è Windows –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker Compose
$composeCmd = $null
if (Get-Command docker-compose -ErrorAction SilentlyContinue) {
    $composeCmd = "docker-compose"
} elseif (docker compose version 2>$null) {
    $composeCmd = "docker compose"
} else {
    Write-Error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
}

Write-Log "–ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–º–∞–Ω–¥—É: $composeCmd"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–æ–≤
if ($Environment -eq "prod") {
    if (-not (Test-Path "docker-comongo.env")) {
        Write-Error "–§–∞–π–ª docker-comongo.env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ —Å production –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏."
        exit 1
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    Get-Content "docker-comongo.env" | ForEach-Object {
        if ($_ -match "^JWT_SECRET=") {
            $jwtSecret = $_.Split("=")[1]
            if ([string]::IsNullOrEmpty($jwtSecret) -or $jwtSecret -eq "webreglog-jwt-secret-key-2024-production-change-this") {
                Write-Error "JWT_SECRET –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é!"
                exit 1
            }
        }
        if ($_ -match "^MONGO_ROOT_PASSWORD=") {
            $mongoPassword = $_.Split("=")[1]
            if ([string]::IsNullOrEmpty($mongoPassword) -or $mongoPassword -eq "password123") {
                Write-Error "MONGO_ROOT_PASSWORD –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é!"
                exit 1
            }
        }
    }
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
Write-Log "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
& $composeCmd down

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è production)
if ($Environment -eq "prod") {
    Write-Log "–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã..."
    & $composeCmd down --rmi all
}

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
Write-Log "–°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
New-Item -ItemType Directory -Force -Path "backend/uploads" | Out-Null
New-Item -ItemType Directory -Force -Path "docker/mongodb/data" | Out-Null
New-Item -ItemType Directory -Force -Path "docker/mongodb/backup" | Out-Null
New-Item -ItemType Directory -Force -Path "docker/nginx/ssl" | Out-Null

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
if ($Environment -eq "prod") {
    Write-Log "–ó–∞–ø—É—Å–∫–∞–µ–º production –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
    & $composeCmd -f docker-compose.yml -f docker-compose.prod.yml up -d --build
} else {
    Write-Log "–ó–∞–ø—É—Å–∫–∞–µ–º development –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
    & $composeCmd up -d --build
}

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
Write-Log "–û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
Start-Sleep -Seconds 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
Write-Log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ MongoDB
try {
    & $composeCmd exec -T mongodb mongosh --eval "db.adminCommand('ping')" 2>$null | Out-Null
    Write-Log "‚úÖ MongoDB –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
} catch {
    Write-Error "‚ùå MongoDB –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Backend
try {
    $response = Invoke-WebRequest -Uri "http://localhost:5001/health" -UseBasicParsing -TimeoutSec 10
    if ($response.StatusCode -eq 200) {
        Write-Log "‚úÖ Backend API –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    }
} catch {
    Write-Error "‚ùå Backend API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend
try {
    $response = Invoke-WebRequest -Uri "http://localhost:3001" -UseBasicParsing -TimeoutSec 10
    if ($response.StatusCode -eq 200) {
        Write-Log "‚úÖ Frontend –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    }
} catch {
    Write-Error "‚ùå Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Nginx (—Ç–æ–ª—å–∫–æ –¥–ª—è production)
if ($Environment -eq "prod") {
    try {
        $response = Invoke-WebRequest -Uri "http://localhost:80" -UseBasicParsing -TimeoutSec 10
        if ($response.StatusCode -eq 200) {
            Write-Log "‚úÖ Nginx –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        }
    } catch {
        Write-Error "‚ùå Nginx –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    }
}

Write-Log "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
Write-Log ""
Write-Log "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
Write-Log "  - Frontend: http://localhost:3001"
Write-Log "  - Backend API: http://localhost:5001"
Write-Log "  - API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:5001/api/docs"
Write-Log "  - Health check: http://localhost:5001/health"

if ($Environment -eq "prod") {
    Write-Log "  - Nginx: http://localhost:80"
}

Write-Log ""
Write-Log "–î–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:"
Write-Log "  - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin@webreglog.com / admin123"
Write-Log "  - –†–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä: registrar@webreglog.com / registrar123"
Write-Log "  - –ê–Ω–∞–ª–∏—Ç–∏–∫: analyst@webreglog.com / analyst123"
Write-Log ""
Write-Log "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: $composeCmd logs -f"
Write-Log "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: $composeCmd down"
