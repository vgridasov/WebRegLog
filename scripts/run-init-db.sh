#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö WebRegLog –¥–ª—è Linux/Mac
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/run-init-db.sh

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
}

log "üîê –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö WebRegLog"
log "============================================="
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è backend –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [[ ! -d "backend" ]]; then
    error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è backend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è package.json
if [[ ! -f "backend/package.json" ]]; then
    error "package.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ backend –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è node_modules
if [[ ! -d "backend/node_modules" ]]; then
    warn "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    cd backend
    npm install
    cd ..
    log "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è dist –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [[ ! -d "backend/dist" ]]; then
    warn "Backend –Ω–µ —Å–æ–±—Ä–∞–Ω. –°–æ–±–∏—Ä–∞–µ–º..."
    cd backend
    npm run build
    cd ..
    log "‚úÖ Backend —Å–æ–±—Ä–∞–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ MongoDB
log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º MongoDB..."
mongodb_status=$(docker-compose ps mongodb | grep -c "Up" || echo "0")

if [[ $mongodb_status -eq 0 ]]; then
    warn "MongoDB –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º..."
    docker-compose up -d mongodb
    sleep 15
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
if ! docker-compose exec -T mongodb mongosh --eval "db.adminCommand('ping')" &> /dev/null; then
    error "‚ùå MongoDB –Ω–µ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ ./scripts/init-database.sh"
    exit 1
fi

log "‚úÖ MongoDB –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"

echo ""
log "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
echo ""

# –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
cd backend
npm run init-db
cd ..

log ""
log "üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
log "üìã –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:"
log "   1. –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: ./scripts/deploy.sh dev"
log "   2. –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ backend: docker-compose up -d"
echo ""
log "üîê –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É —Å —Å–æ–∑–¥–∞–Ω–Ω—ã–º–∏ —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"
log "üåê Frontend: http://localhost:3001"
